Change OrderItem to have:

attr_reader :product  (product object with possible subproducts)
attr_reader :quantity
attr_reader :weight     (Change that weight is not mandatory for Products that have ProductItems)
attr_reader :observations
attr_reader :price  (the price is calculated in constructor cause the customer is passed there)
attr_reader :items (list of OrderSubItem objects)   Create the OrderSubItem class

And change to_s function from OrderItem to consider new items attr.

Then try to figure out some UI for selecting ProductItem from Products while creating an order

In order_dialog.rb, extend add_item_to_ordered_items( customer_name, product_name, quantity, weigh, gui_observations )
with another attribute which could be SubProductItems with quantity, weight and product attributes
i.e subproduct_items = [ { :weight => 0,5, :quantity => 1, :product => product_object_llom },
                         { :weight => 0,4, :quantity => 1, :product => product_object_carn_picada } ]

Refactor products_csv with smaller functions
En products view, display subproducts properly.
Cuando se crea una comanda y se selecciona un lote, dar opciones de subproductos.

Clean up code since it is starting to be ugly.

Refactor OrderDialog in smaller functions
Rename OrderDialog to NewOrderDialog

save as/load comandes (orders) in csv para poder cargarlas si se desea. Cuidado que aqui el cerdo no puede con tantas comandas?

Generar factura e imprimir/guardar/escribir factura

Cada producto resta una parte del cerdo
    - Tabla producto / partes del cerdo
